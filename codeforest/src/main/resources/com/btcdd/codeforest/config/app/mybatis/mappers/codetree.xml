<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="codetree">
	
	<insert id="saveUserAndProblem" parameterType="hashmap" useGeneratedKeys="true" keyProperty="id">
		<![CDATA[
			insert into save (no, user_no, problem_no) 
				 values((select s.no 
				           from save s 
				          where s.user_no = #{authUserNo } 
				            and s.problem_no = #{problemNo }), #{authUserNo },#{problemNo }) 
			 	 on duplicate key update user_no = #{authUserNo }, problem_no = #{problemNo }
		]]>
	</insert>
	
	<insert id="savePath" parameterType="hashmap" useGeneratedKeys="true" keyProperty="id">
		<![CDATA[
			insert into save_path (no, sub_problem_no, save_no, package_path)
			values
		]]>
		<foreach collection="savePathVoList" item="item" separator=",">
			<![CDATA[
				((select sp.no 
				          from save_path sp 
				         where sp.sub_problem_no = ${item.subProblemNo } 
				           and sp.save_no = ${item.saveNo }), ${item.subProblemNo }, ${item.saveNo }, '${item.packagePath }')
			]]>
		</foreach>
		<![CDATA[
			 on duplicate key update sub_problem_no = values(sub_problem_no), save_no = values(save_no), package_path= values(package_path)
		]]>
	</insert>
	
	<insert id="saveCode" parameterType="hashmap" useGeneratedKeys="true" keyProperty="id">
		<![CDATA[
			insert into code (no, save_path_no, language, code, file_name)
				 values
		]]>
		<foreach collection="codeVoList" item="item" separator=",">
			<![CDATA[
				((select c.no from code c where c.save_path_no = ${item.savePathNo } and c.language = '${item.language }' and c.file_name = '${item.fileName }'), ${item.savePathNo }, '${item.language }', '${item.code }', '${item.fileName}')
			]]>
		</foreach>
		<![CDATA[
			 on duplicate key update save_path_no = values(save_path_no), language = values(language), code = values(code), file_name = values(file_name)
		]]>
	</insert>
	
	<select id="findCode" parameterType="long" resultType="codevo">
		<![CDATA[
			select no, save_path_no as savePathNo, language, code, file_name as fileName
			  from code 
			 where save_path_no = (select no from save_path where sub_problem_no = #{subProblemNo })
		]]>
	</select>
	
	<select id="findSaveNo" parameterType="map" resultType="long">
		<![CDATA[
			select no 
			  from save
			 where user_no = #{userNo }
			   and problem_no = #{problemNo }
		]]>
	</select>
	
	<select id="findSubProblemNo" parameterType="long" resultType="subproblemvo">
		<![CDATA[
			select no 
			  from sub_problem 
			 where problem_no = #{problemNo }
		]]>
	</select>

	<select id="totalCount" parameterType="hashmap" resultType="integer">
		<choose>
			<when test="keyword == null or keyword == ''">
				<![CDATA[
                    select count(*) from user u, save s, problem p
                    where s.user_no = u.no and s.problem_no = p.no and s.user_no = #{authUserNo} and p.state ='y'				
				]]>
			</when>
			<otherwise>
			 <![CDATA[				 	
                    select count(*) from user u, save s, problem p,kind k
                    where s.user_no = u.no and k.no = p.kind_no and s.problem_no = p.no 
                    and s.user_no = #{authUserNo}  and p.state ='y'                   
                    and (p.title like '%${keyword}%' or u.nickname like '%${keyword}%' or k.name like '%${keyword}%')			 	
			 ]]>
			</otherwise>			
		</choose>
	</select>
	
	<select id="selectSaveNoList" parameterType="hashmap" resultType="savevo">
		<choose>
			<when test="keyword == null or keyword == ''">
				<![CDATA[
			  select s.no as no, s.user_no as userNo, s.problem_no as problemNo, p.title as title, k.name as kind, u.nickname as nickname
				from save s, problem p, kind k, user u
			   where s.user_no = #{authUserNo }
				 and s.user_no = u.no
				 and s.problem_no = p.no
				 and p.kind_no = k.no
				 and p.state ='y'
				 and ((p.end_time < now() and p.privacy='y') or (p.end_time is null and p.privacy is null))
				 order by s.no desc
				 limit #{displayPost}, #{postNum}
				]]>
			</when>
			<otherwise>
			 <![CDATA[				 	
			  select s.no as no, s.user_no as userNo, s.problem_no as problemNo, p.title as title, k.name as kind, u.nickname as nickname
				from save s, problem p, kind k, user u
			   where s.user_no = #{authUserNo }
				 and s.user_no = u.no
				 and s.problem_no = p.no
				 and p.kind_no = k.no 
				 and p.state ='y'
				 and ((p.end_time < now() and p.privacy='y') or (p.end_time is null and p.privacy is null))
                and (p.title like '%${keyword}%' or u.nickname like '%${keyword}%' or k.name like '%${keyword}%' )
                order by s.no desc
               limit #{displayPost}, #{postNum}			 	
			 ]]>
			</otherwise>			
		</choose>		
	</select>

	<select id="findSaveVo" parameterType="long" resultType="savevo">
		<![CDATA[
			select s.no as no, s.user_no as userNo, s.problem_no as problemNo, p.title as title, k.name as kind, u.nickname as nickname 
			  from save s, user u, problem p, kind k
			 where s.no = #{saveNo } and s.user_no = u.no and s.problem_no = p.no and p.kind_no = k.no
		]]>
	</select>

	<select id="findSavePathList" parameterType="long" resultType="savepathvo">
		<![CDATA[
			select no, sub_problem_no as subProblemNo, save_no as saveNo, package_path as packagePath
			  from save_path
			 where save_no = #{saveNo }
		]]>
	</select>

	<select id="findCodeList" parameterType="long" resultType="codevo">
		<![CDATA[
			select c.no as no, c.save_path_no as savePathNo, c.language as language, c.file_name as fileName, sp.sub_problem_no as subProblemNo
			  from code c, save_path sp
			 where c.save_path_no = #{savePathNo } and c.save_path_no = sp.no order by c.file_name;
		]]>
	</select>
	
	<select id="findSubProblemList" parameterType="long" resultType="subproblemvo">
		<![CDATA[
			select no, title, contents, exam_input as examInput, exam_output as examOutput, problem_no as problemNo, state
			  from sub_problem
			 where problem_no = #{problemNo } and state = 'y'
		]]>
	</select>
	<insert id="insertFile" parameterType="hashmap" useGeneratedKeys="true" keyProperty="id">
		<![CDATA[
			insert into code values(null,#{savePathNo},#{language},binary(#{fileName}));
		]]>
	</insert>

	<select id="findByFileName" parameterType="string" resultType="codevo">
		<![CDATA[
			select 
				*
			from code 
			where file_name = binary(#{fileName}) and save_path_no = #{savePathNo}
			 
		]]>
	</select>	

	<select id="findProblemNo" parameterType="long" resultType="long">
		<![CDATA[
			select problem_no
			  from sub_problem
			 where no = #{subProblemNo }
		]]>
	</select>

	<select id="findCodeNo" parameterType="hashmap" resultType="long">
		<![CDATA[
			select no
			  from code
			 where save_path_no = #{savePathNo} and file_name = binary(#{fileName})
		]]>
	</select>
	
	<delete id="delete" parameterType="long">
		<![CDATA[
			delete 
			  from code 
			 where no=#{no}
		]]>
	</delete>
	
	<select id="findSavePathNoAndFileName" parameterType="long" resultType="codevo">
		<![CDATA[
			select no, save_path_no as savePathNo, language, file_name as fileName
			  from code
			 where no = #{codeNo }
		]]>
	</select>
	
	<select id="findSavePathVo" parameterType="long" resultType="savepathvo">
		<![CDATA[
			select no, sub_problem_no as subProblemNo, save_no as saveNo, package_path as packagePath
			  from save_path
			 where no = #{savePathNo }
		]]>
	</select>
	
	<update id="updateFile" parameterType="hashmap">
		<![CDATA[
			update code set
				file_name = #{fileName}
			where no = #{codeNo}
		]]>	
	</update>
	
	<select id="getExamOutput" parameterType="long" resultType="string">
		<![CDATA[
			select exam_output as examOutput from sub_problem where no = #{no }
		]]>
	</select>
	
	<insert id="submitSubProblem" parameterType="hashmap">
		<![CDATA[
			insert into submit values(null, #{codeValue}, answer = #{answer}, #{subProblemNo}, #{authUserNo}, null, #{language})
		]]>		
	</insert>
	
	<select id="findSubmitNoBySubProblem" parameterType="hashmap" resultType="submitvo">
		<![CDATA[
			select 
				no,
				code as code,
				answer as answer,
				subproblem_no as subproblemNo,
				user_no as userNo,
				solve_time as solveTime,
				lang as lang
			  from submit
			 where subproblem_no = #{subProblemNo} and user_no = #{authUserNo} and lang = #{language }
		]]>
	</select>	
	
	<select id="existAttempt" parameterType="long" resultType="submitvo">
		<![CDATA[
			select 
				submit_no as no,
				attempt as tryCount
			from try_count 
			where submit_no = #{submitNo}
		]]>
	</select>		
	<insert id="insertAttempt" parameterType="long">
		<![CDATA[
			insert into try_count values(#{submitNo}, 1)
		]]>		
	</insert>	

	<update id="updateAttempt" parameterType="long">
		<![CDATA[
			update try_count 
				set attempt = attempt + 1				
			where submit_no = #{submitNo}
		]]>	
	</update>	
	
	<update id="updateSubProblem" parameterType="hashmap">
		<![CDATA[
			update submit 
				set code = #{codeValue }, answer = #{answer }				
			where no = #{submitNo }
		]]>	
	</update>

	
</mapper>